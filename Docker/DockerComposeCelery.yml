version: '2'
x-airflow-common:
  &airflow-common
  image: eloyfreitas/airflow:latest
    
  environment:
    &airflow-common-env
    AIRFLOW__CORE__EXECUTOR: CeleryExecutor
    AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow_12345@postgres:5432/airflow
    AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow_12345@postgres:5432/airflow
    AIRFLOW__CELERY__BROKER_URL: redis://:redispass@redis:6379/0
    AIRFLOW__CORE__FERNET_KEY: ''
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'True'
    AIRFLOW__CORE__DAGS_FOLDER: '/opt/airflow/dags'
    AIRFLOW__CORE__LOAD_EXAMPLES: 'False'
    AIRFLOW__WEBSERVER__DEFAULT_UI_TIMEZONE: 'America/Sao_Paulo'
    AIRFLOW__CELERY__WORKER_CONCURRENCY: '12'
    AIRFLOW__WEBSERVER__LOG_FETCH_TIMEOUT_SEC: '40'
    AIRFLOW__CORE__MAX_ACTIVE_RUNS_PER_DAG: '12'
    AIRFLOW__CORE__DAGBAG_IMPORT_TIMEOUT: '60'
    AIRFLOW__SCHEDULER__SCHEDULER_HEALTH_CHECK_THRESHOLD: '60'
    AIRFLOW__CELERY__FLOWER_BASIC_AUTH: 'airflow:airflow_12345'
    AIRFLOW__WEBSERVER__INSTANCE_NAME: 'biunimedgoiania'
    AIRFLOW__LOGGING__LOGGING_LEVEL: 'INFO'
    AIRFLOW__LOGGING__BASE_LOG_FOLDER: '/opt/airflow/logs'
    AIRFLOW__LOGGING__REMOTE_BASE_LOG_FOLDER: '/opt/airflow/logs'
    #LD_LIBRARY_PATH:'/opt/airflow/dags/Drivers/oracle_driver/instantclient_19_14'
    #LD_LIBRARY_PATH:'/opt/airflow/dags/Drivers/oracle_driver/instantclient_19_14:$LD_LIBRARY_PATH'

    POSTGRES_PASSWORD: airflow_12345
    #AIRFLOW_UID: '50000'
    user: "50000:50000"

  depends_on:
    - redis
    - postgres

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow_12345
      POSTGRES_DB: airflow

    ports:
      - 5432:5432
      
    volumes:
      - ./opt/volumes_arquitetura_bi/postgres_db_volume:/var/lib/postgresql/data
    
  redis:
    image: redis:6.2.1 #colocar vers√£o fixa
    ports:
      - 6379:6379
    volumes:
        - ./opt/volumes_arquitetura_bi/redis_db_volume:/var/lib/redis/data        
        
    command: [ "redis-server", "--requirepass redispass"]    
    
  airflow-webserver:
    <<: *airflow-common
    command: webserver
    ports:
      - 8080:8080
    volumes:

      - ./opt/volumes_arquitetura_bi/Source:/opt/airflow/source
      - ./opt/volumes_arquitetura_bi/Logs:/opt/airflow/logs
            
  airflow-scheduler:
    <<: *airflow-common
    command: scheduler
    ports:
      - 8793:8793 
    volumes:
      - ./opt/volumes_arquitetura_bi/Source:/opt/airflow/source
      - ./opt/volumes_arquitetura_bi/Logs:/opt/airflow/logs

    restart: always

  airflow-worker-a:
    <<: *airflow-common
    command: celery worker   
    volumes:
      - ./opt/volumes_arquitetura_bi/Source:/opt/airflow/source
      - ./opt/volumes_arquitetura_bi/Logs:/opt/airflow/logs
      
    restart: always
    
  airflow-worker-b:
    <<: *airflow-common
    command: celery worker
    volumes:
      - ./opt/volumes_arquitetura_bi/Source:/opt/airflow/source
      - ./opt/volumes_arquitetura_bi/Logs:/opt/airflow/logs
      
    restart: always

  airflow-init:
    <<: *airflow-common
    entrypoint: /bin/bash
    command:
      - -c
      - |
        function ver() {
          printf "%04d%04d%04d%04d" $${1//./ }
        }
        airflow_version=$$(gosu airflow airflow version)
        airflow_version_comparable=$$(ver $${airflow_version})
        min_airflow_version=2.2.0
        min_airflow_version_comparable=$$(ver $${min_airflow_version})
        if (( airflow_version_comparable < min_airflow_version_comparable )); then
          echo
          echo -e "\033[1;31mERROR!!!: Too old Airflow version $${airflow_version}!\e[0m"
          echo "The minimum Airflow version supported: $${min_airflow_version}. Only use this or higher!"
          echo
          exit 1
        fi
        if [[ -z "${AIRFLOW_UID}" ]]; then
          echo
          echo -e "\033[1;33mWARNING!!!: AIRFLOW_UID not set!\e[0m"
          echo "If you are on Linux, you SHOULD follow the instructions below to set "
          echo "AIRFLOW_UID environment variable, otherwise files will be owned by root."
          echo "For other operating systems you can get rid of the warning with manually created .env file:"
          echo "    See: https://airflow.apache.org/docs/apache-airflow/stable/start/docker.html#setting-the-right-airflow-user"
          echo
        fi
        one_meg=1048576
        mem_available=$$(($$(getconf _PHYS_PAGES) * $$(getconf PAGE_SIZE) / one_meg))
        cpus_available=$$(grep -cE 'cpu[0-9]+' /proc/stat)
        disk_available=$$(df / | tail -1 | awk '{print $$4}')
        warning_resources="false"
        if (( mem_available < 4000 )) ; then
          echo
          echo -e "\033[1;33mWARNING!!!: Not enough memory available for Docker.\e[0m"
          echo "At least 4GB of memory required. You have $$(numfmt --to iec $$((mem_available * one_meg)))"
          echo
          warning_resources="true"
        fi
        if (( cpus_available < 2 )); then
          echo
          echo -e "\033[1;33mWARNING!!!: Not enough CPUS available for Docker.\e[0m"
          echo "At least 2 CPUs recommended. You have $${cpus_available}"
          echo
          warning_resources="true"
        fi
        if (( disk_available < one_meg * 10 )); then
          echo
          echo -e "\033[1;33mWARNING!!!: Not enough Disk space available for Docker.\e[0m"
          echo "At least 10 GBs recommended. You have $$(numfmt --to iec $$((disk_available * 1024 )))"
          echo
          warning_resources="true"
        fi
        if [[ $${warning_resources} == "true" ]]; then
          echo
          echo -e "\033[1;33mWARNING!!!: You have not enough resources to run Airflow (see above)!\e[0m"
          echo "Please follow the instructions to increase amount of resources available:"
          echo "   https://airflow.apache.org/docs/apache-airflow/stable/start/docker.html#before-you-begin"
          echo
        fi
        mkdir -p /sources/logs /sources/dags /sources/plugins
        chown -R "50000:0" /sources/{logs,dags,plugins}
        exec /entrypoint airflow version
        
    environment:
      <<: *airflow-common-env
      _AIRFLOW_DB_UPGRADE: 'true'
      _AIRFLOW_WWW_USER_CREATE: 'true'
      _AIRFLOW_WWW_USER_USERNAME: airflow
      _AIRFLOW_WWW_USER_PASSWORD: airflow_12345
    user: "0:0"

  flower:
    <<: *airflow-common
    command: celery flower
    ports:
      - 5555:5555
    volumes:
      - ./opt/volumes_arquitetura_bi/Logs:/opt/airflow/logs